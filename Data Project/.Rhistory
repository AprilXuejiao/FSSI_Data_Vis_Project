x = -0.4,
itemclick = "toggleothers",
itemdoubleclick = "toggle"))
Volunteers_PaidStaff_2016 <- summarise(group_by(VCOSS_ACNC_16,
main_activity = main_activity_2016,
charity_size),
paid_staff = sum(staff_full_time_2016,
staff_part_time_2016,
staff_casual_2016,
na.rm = TRUE),
volunteers = sum(staff_volunteers_2016))
Volunteers_PaidStaff_2016$Year <- 2016
Volunteers_PaidStaff_2017 <- summarise(group_by(VCOSS_ACNC_17,
main_activity, charity_size),
paid_staff = sum(staff_full_time_2017,
staff_part_time_2017,
staff_casual_2017,
na.rm = TRUE),
volunteers = sum(staff_volunteers))
Volunteers_PaidStaff_2017$Year <- 2017
Volunteers_PaidStaff_1617 <- rbind(Volunteers_PaidStaff_2016, Volunteers_PaidStaff_2017)
gg_SocServ_Volunteers_PaidStaff_1617 <- ggplot(filter(Volunteers_PaidStaff_1617,
str_detect(main_activity,
regex("social services",
ignore_case = TRUE)))) +
geom_abline(slope = 1,
intercept = 0,
linetype = 5,
col = "grey80",
size = 0.25) +
geom_point(aes(x = paid_staff,
y = volunteers,
size = fct_rev(charity_size),
frame = Year,
text = paste(sep = "\n",
paste(charity_size, "charities"),
paste(comma(volunteers), "volunteers"),
paste(comma(paid_staff), "paid staff"),
paste(percent(volunteers / (volunteers + paid_staff), 0.1),
"volunteer workforce"))),
colour = FSSIGreenSingle, alpha = 0.75,
line = "grey25") +
scale_x_continuous("Paid Staff",
labels = comma) +
scale_y_continuous("Volunteers",
labels = comma,
breaks = pretty_breaks(5)) +
scale_size_discrete("",
range = c(4, 8)) +
theme_minimal()
ggplotly(gg_SocServ_Volunteers_PaidStaff_1617,
tooltip = "text") %>%
add_annotations(text = "equal number volunteers to paid staff",
textangle = -32.62,
opacity = 0.5,
showarrow = FALSE,
xref = "x",
x = 20000,
yref = "y",
y = 22500) %>%
layout(legend = list(title = list(text = "Charity size",
font = list(size = 14)),
itemclick = "toggleothers",
itemdoubleclick = "toggle"),
title = list(text = "Volunteers and Paid Staff Working for Social Services, 2016 to 2017",
xref = "canvas",
x = 0.1),
margin = list(t = 50,
b = 10,
l = 5,
r = 5),
font = list(family = FSSIfont,
size = 12))
Volunteers_PaidStaff_1617_long <- pivot_longer(Volunteers_PaidStaff_1617,
cols = c(paid_staff, volunteers),
names_to = "staff_type",
values_to = "staff_count")
Volunteers_PaidStaff_1617_long <- mutate(group_by(Volunteers_PaidStaff_1617_long,
main_activity, charity_size, Year),
proportion = (staff_count / sum(staff_count)))
activity <- unique(Volunteers_PaidStaff_1617_long$main_activity)
plot_ly(data = filter(Volunteers_PaidStaff_1617_long,
str_detect(main_activity,
regex("social services",
ignore_case = TRUE))),
type = "pie",
labels = ~str_cleaner(staff_type),
values = ~staff_count,
frame = ~Year,
hovertemplate = paste(sep = "\n",
"%{value} %{label}",
activity[1],
"<extra></extra>"),
marker = list(colors = c("rgb(84, 144, 65))",
"rgb(77, 234, 229"),
line = list(color = "#cecece",
width = 0.85))) %>%
layout(title = list(text = "Volunteer Workforce Share for Social Services, 2016 to 2017",
standoff = 10,
xref = "canvas",
x = 0.1),
font = list(family = FSSIfont,
size = 12),
legend = list(title = list(text = "Staff employment type",
font = list(size = 14))))
SocServ_DebtSurplus_MainAct_16 <- summarise(group_by(filter(VCOSS_ACNC_16,
str_detect(main_activity_2016,
regex("social services",
ignore_case = TRUE))),
main_activity = main_activity_2016),
net_debt = sum(net_surplus_deficit_2016 < 0),
net_surplus = sum(net_surplus_deficit_2016 > 0),
net_even = sum(net_surplus_deficit_2016 == 0))
SocServ_DebtSurplus_MainAct_16$Year <- 2016
SocServ_DebtSurplus_MainAct_17 <- summarise(group_by(filter(VCOSS_ACNC_17,
str_detect(main_activity,
regex("social services",
ignore_case = TRUE))),
main_activity),
net_debt = sum(net_surplus_deficit_2017 < 0),
net_surplus = sum(net_surplus_deficit_2017 > 0),
net_even = sum(net_surplus_deficit_2017 == 0))
SocServ_DebtSurplus_MainAct_17$Year <- 2017
SocServ_DebtSurplus_MainAct_1617 <- rbind(SocServ_DebtSurplus_MainAct_16, SocServ_DebtSurplus_MainAct_17)
SocServ_DebtSurplus_MainAct_1617_long <- pivot_longer(SocServ_DebtSurplus_MainAct_1617,
cols = c(net_debt,
net_surplus,
net_even),
names_to = "budget_status",
values_to = "count")
SocServ_DebtSurplus_MainAct_1617_long$Year <- as.ordered(SocServ_DebtSurplus_MainAct_1617_long$Year)
gg_SocServ_DebtSurplus <- ggplot(SocServ_DebtSurplus_MainAct_1617_long,
aes(x = Year,
y = count,
colour = str_cleaner(budget_status),
group = budget_status,
text = paste(sep = "\n",
paste(comma(count, 1), "charities"),
str_cleaner(budget_status)))) +
geom_point() +
geom_line() +
scale_x_discrete(expand = c(0.05, 0.05)) +
scale_y_continuous("Number of Charities",
labels = comma,
limits = c(0, NA)) +
scale_color_manual("",
values = FSSIQualPal(6)[4:6]) +
theme_minimal()
ggplotly(gg_SocServ_DebtSurplus,
tooltip = "text") %>%
layout(title = list(text = "Count of Social Services Charities by Budget Status, 2016 - 2017",
standoff = 10,
xref = "canvas",
x = 0.1),
font = list(family = FSSIfont,
size = 12),
margin = list(t = 80),
legend = list(title = list(text = "Budget status",
font = list(size = 14)),
itemclick = "toggleothers",
itemdoubleclick = "toggle"))
Other_DebtSurplus_MainAct_16 <- summarise(group_by(filter(VCOSS_ACNC_16,
!str_detect(main_activity_2016,
regex("social services",
ignore_case = TRUE))),
main_activity = main_activity_2016),
net_debt = sum(net_surplus_deficit_2016 < 0),
net_surplus = sum(net_surplus_deficit_2016 > 0),
net_even = sum(net_surplus_deficit_2016 == 0))
Other_DebtSurplus_MainAct_16$Year <- 2016
Other_DebtSurplus_MainAct_17 <- summarise(group_by(filter(VCOSS_ACNC_17,
!str_detect(main_activity,
regex("social services",
ignore_case = TRUE))),
main_activity),
net_debt = sum(net_surplus_deficit_2017 < 0),
net_surplus = sum(net_surplus_deficit_2017 > 0),
net_even = sum(net_surplus_deficit_2017 == 0))
Other_DebtSurplus_MainAct_17$Year <- 2017
Other_DebtSurplus_MainAct_1617 <- rbind(Other_DebtSurplus_MainAct_16, Other_DebtSurplus_MainAct_17)
Other_DebtSurplus_MainAct_1617_long <- pivot_longer(Other_DebtSurplus_MainAct_1617,
cols = c(net_debt,
net_surplus,
net_even),
names_to = "budget_status",
values_to = "count")
Other_DebtSurplus_MainAct_1617_long$Year <- as.ordered(Other_DebtSurplus_MainAct_1617_long$Year)
Other_DebtSurplus_MainAct_1617_long <- mutate(group_by(Other_DebtSurplus_MainAct_1617_long,
main_activity, Year),
proportion = (count / sum(count, na.rm = TRUE)))
gg_Other_DebtSurplus_prop <- ggplot(Other_DebtSurplus_MainAct_1617_long) +
geom_bar(aes(x = proportion,
y = fct_rev(str_clean_wrap(main_activity, 28)),
fill = fct_rev(str_cleaner(budget_status)),
text = paste(sep = "\n",
percent(proportion, 0.1),
paste(comma(count), "charities"),
str_cleaner(budget_status))),
stat = "identity",
show.legend = FALSE) +
scale_fill_manual(values = FSSIQualPal(3)) +
facet_wrap(~Year) +
scale_x_continuous(" \nPercent",
labels = percent) +
scale_y_discrete("") +
theme_minimal()  +
theme(panel.spacing.x = unit(1, "cm"))
pl_Other_DebtSurplus_prop <- ggplotly(gg_Other_DebtSurplus_prop,
tooltip = "text") %>%
layout(showlegend = TRUE,
title = list(text = "Percentage of Charities by Budget Status and Sector",
standoff = 10,
xref = "canvas",
x = 0.1),
font = list(family = FSSIfont,
size = 12),
yaxis = list(title = list(text = "Main Activity",
standoff = 1)),
margin = list(t = 40, b = 50,
l = 5, r = 5))
## Social Services
SocServ_DebtSurplus_MainAct_1617_long <- mutate(group_by(SocServ_DebtSurplus_MainAct_1617_long,
Year),
proportion = (count / sum(count)))
gg_SocServ_DebtSurplus_prop <- ggplot(SocServ_DebtSurplus_MainAct_1617_long) +
geom_bar(aes(x = proportion,
y = fct_rev(str_clean_wrap(main_activity, 28)),
fill = fct_rev(str_cleaner(budget_status)),
text = paste(sep = "\n",
percent(proportion, 0.1),
paste(comma(count), "charities"),
str_cleaner(budget_status))),
stat = "identity",
show.legend = FALSE) +
scale_fill_manual(values = FSSIQualPal(6)[4:6]) +
facet_wrap(~Year) +
scale_x_continuous(" \nPercent",
labels = percent) +
scale_y_discrete("") +
theme_minimal()  +
theme(panel.spacing.x = unit(1, "cm"),
strip.text = element_text(colour = NA))
pl_SocServ_DebtSurplus_prop <- ggplotly(gg_SocServ_DebtSurplus_prop,
tooltip = "text") %>%
layout(showlegend = TRUE,
title = list(text = "Percentage of Charities by Budget Status and Sector",
standoff = 10,
xref = "canvas",
x = 0.1),
font = list(family = FSSIfont,
size = 12),
yaxis = list(title = list(text = "Main Activity",
standoff = 1)),
margin = list(t = 40, b = 50,
l = 5, r = 5))
subplot(pl_Other_DebtSurplus_prop, pl_SocServ_DebtSurplus_prop,
nrows = 2, margin = 0,
shareX = TRUE,
heights = c(10/11, 1/11)) %>%
layout(legend = list(title = list(text = "Budget status",
font = list(size = 14)),
itemclick = "toggleothers",
itemdoubleclick = "toggle"))
Grants_MainAct_16 <- summarise(group_by(VCOSS_ACNC_16,
main_activity = main_activity_2016),
for_use_in_australia = sum(grants_and_donations_made_for_use_in_australia_2016,
na.rm = TRUE),
for_use_outside_australia = sum(grants_and_donations_made_for_use_outside_australia_2016,
na.rm = TRUE))
Grants_MainAct_16$Year <- 2016
Grants_MainAct_17 <- summarise(group_by(VCOSS_ACNC_17,
main_activity),
for_use_in_australia = sum(grants_and_donations_made_for_use_in_australia_2017,
na.rm = TRUE),
for_use_outside_australia = sum(grants_and_donations_made_for_use_outside_australia_2017,
na.rm = TRUE))
Grants_MainAct_17$Year <- 2017
Grants_MainAct_1617 <- rbind(Grants_MainAct_16, Grants_MainAct_17)
Grants_MainAct_1617$Year <- factor(Grants_MainAct_1617$Year)
Grants_MainAct_1617_long <- pivot_longer(Grants_MainAct_1617,
cols = c(for_use_in_australia,
for_use_outside_australia),
names_to = "grant_use",
values_to = "grant_amount")
Grants_MainAct_1617_long <- arrange(Grants_MainAct_1617_long,
desc(grant_amount))
Grants_MainAct_1617_long$main_activity <- as.ordered(Grants_MainAct_1617_long$main_activity)
Grants_MainAct_1617_long$SocServ <- if_else(str_detect(Grants_MainAct_1617_long$main_activity,
regex("social services",
ignore_case = TRUE)),
true = TRUE, false = FALSE)
gg_Grants_MainAct_1617 <- ggplot(Grants_MainAct_1617_long) +
geom_bar(aes(x = grant_amount,
y = fct_rev(fct_inorder(str_clean_wrap(main_activity, 28))),
fill = str_clean_wrap(grant_use),
group = grant_use,
text = paste(sep = "\n",
str_cleaner(grant_use),
dollar(grant_amount))),
size = 1,
stat = "identity") +
facet_wrap(~ Year) +
scale_x_continuous(" \nTotal Grants",
labels = dollar_format(scale = 0.000001,
suffix = "m"),
limits = c(0, NA)) +
scale_y_discrete("") +
scale_fill_manual(values = FSSIQualPal(2)) +
theme_minimal() +
theme(legend.position = "none",
panel.grid.major.y = element_blank(),
legend.background = element_rect(colour = NA,
fill = NA))
ggplotly(gg_Grants_MainAct_1617,
tooltip = "text") %>%
layout(showlegend = TRUE,
title = list(text = "Grants and Donations for Use In and Outside Australia by Main Activity, 2016 to 2017",
xref = "canvas",
x = 0.1),
legend = list(title = list(text = "Grant use",
font = list(size = 14)),
itemclick = "toggleothers",
itemdoubleclick = "toggle",
font = list(size = 12)),
font = list(family = FSSIfont,
size = 12),
margin = list(t = 40,
b = 45),
yaxis = list(title = list(text = "Main Activity",
standoff = 1)))
Grants_InOut_MainAct_16 <- summarise(group_by(filter(VCOSS_ACNC_16,
str_detect(main_activity_2016,
regex("social services",
ignore_case = TRUE))),
main_activity = main_activity_2016),
for_use_in_australia = sum(grants_and_donations_made_for_use_in_australia_2016,
na.rm = TRUE),
for_use_outside_australia = sum(grants_and_donations_made_for_use_outside_australia_2016,
na.rm = TRUE))
Grants_InOut_MainAct_16$Year <- 2016
Grants_InOut_MainAct_17 <- summarise(group_by(filter(VCOSS_ACNC_17,
str_detect(main_activity,
regex("social services",
ignore_case = TRUE))),
main_activity),
for_use_in_australia = sum(grants_and_donations_made_for_use_in_australia_2017,
na.rm = TRUE),
for_use_outside_australia = sum(grants_and_donations_made_for_use_outside_australia_2017,
na.rm = TRUE))
Grants_InOut_MainAct_17$Year <- 2017
Grants_InOut_MainAct_1617 <- rbind(Grants_InOut_MainAct_16, Grants_InOut_MainAct_17)
Grants_InOut_MainAct_1617$Year <- as.ordered(Grants_InOut_MainAct_1617$Year)
Grants_InOut_MainAct_1617_long <- pivot_longer(Grants_InOut_MainAct_1617,
cols = c(for_use_in_australia,
for_use_outside_australia),
names_to = "grant_source",
values_to = "grant_amount")
gg_Grants_InOut_MainAct_1617 <- ggplot(Grants_InOut_MainAct_1617_long,
aes(x = Year,
y = grant_amount,
colour = str_clean_wrap(grant_source),
group = grant_source,
text = paste("\n",
dollar(grant_amount,
1),
str_cleaner(grant_source)))) +
geom_line() +
geom_point() +
scale_x_discrete(expand = c(0.05, 0.05)) +
scale_y_continuous("Grant Amount",
labels = dollar_format(scale = 0.000001,
suffix = "m")) +
scale_color_manual("",
values = FSSIQualPal(2)) +
theme_minimal()
ggplotly(gg_Grants_InOut_MainAct_1617,
tooltip = "text") %>%
layout(title = list(text = "Grant Use for Social Services, 2016 to 2017",
standoff = 10,
xref = "canvas",
x = 0.1),
font = list(family = FSSIfont,
size = 12),
legend = list(title = list(text = "Grant use",
font = list(size = 14)),
itemclick = "toggleothers",
itemdoubleclick = "toggle"))
Grants_CharSize_16 <- summarise(group_by(VCOSS_ACNC_16,
charity_size, main_activity = main_activity_2016),
for_use_in_australia = sum(grants_and_donations_made_for_use_in_australia_2016,
na.rm = TRUE),
for_use_outside_australia = sum(grants_and_donations_made_for_use_outside_australia_2016,
na.rm = TRUE))
Grants_CharSize_16$Year <- 2016
Grants_CharSize_17 <- summarise(group_by(VCOSS_ACNC_17,
charity_size, main_activity),
for_use_in_australia = sum(grants_and_donations_made_for_use_in_australia_2017,
na.rm = TRUE),
for_use_outside_australia = sum(grants_and_donations_made_for_use_outside_australia_2017,
na.rm = TRUE))
Grants_CharSize_17$Year <- 2017
Grants_CharSize_1617 <- rbind(Grants_CharSize_16, Grants_CharSize_17)
Grants_CharSize_1617 <- pivot_longer(Grants_CharSize_1617,
cols = c(for_use_in_australia,
for_use_outside_australia),
names_to = "grant_use",
values_to = "grant_amount")
Grants_CharSize_1617$SocServ <- if_else(str_detect(Grants_CharSize_1617$main_activity,
regex("social services",
ignore_case = TRUE)),
true = "Social Services", false = "Other Sectors")
Grants_CharSize_1617_prop <- summarise(group_by(Grants_CharSize_1617,
charity_size, SocServ, Year, grant_use),
grant_amount = sum(grant_amount))
Grants_CharSize_1617_prop <- mutate(group_by(Grants_CharSize_1617_prop,
charity_size, SocServ, Year),
proportion = (grant_amount / sum(grant_amount)))
gg_Grants_CharSize_1617 <- ggplot(Grants_CharSize_1617_prop) +
geom_bar(aes(x = fct_rev(charity_size),
y = grant_amount,
fill = str_clean_wrap(grant_use),
text = paste(sep = "\n",
dollar(grant_amount),
percent(proportion, 0.1))),
stat = "identity") +
facet_rep_wrap(SocServ ~ Year,
scales = "free_y") +
scale_fill_manual("Grant use",
values = FSSIQualPal(2)) +
scale_x_discrete(" \nCharity Size") +
scale_y_continuous("Total Grants\n\n ",
labels = dollar_format(scale = 0.000001, suffix = "m")) +
theme_minimal() +
theme(panel.spacing.y = unit(2, "cm"),
panel.spacing.x = unit(1, "cm"),
axis.ticks.length.x = unit(2, "mm"))
ggplotly(gg_Grants_CharSize_1617,
tooltip = "text") %>%
layout(font = list(family = FSSIfont,
size = 12),
title = list(text = "Grants by Country Use and Charity Size",
standoff = 10,
xref = "canvas",
x = 0.1),
margin = list(t = 75,
b = 50),
legend = list(itemclick = "toggleothers",
itemdoubleclick = "toggle"))
gg_Grants_CharSize_1617_prop <- ggplot(Grants_CharSize_1617_prop) +
geom_bar(aes(x = proportion,
y = fct_rev(charity_size),
fill = str_clean_wrap(grant_use),
text = paste(sep = "\n",
percent(proportion, 0.1),
dollar(grant_amount))),
stat = "identity") +
facet_rep_wrap(SocServ ~ Year) +
scale_fill_manual("",
values = FSSIQualPal(2)) +
scale_x_continuous(" \nPercentage of Grants",
labels = percent) +
scale_y_discrete(" \nCharity Size") +
theme_minimal() +
theme(panel.spacing.y = unit(2, "cm"),
axis.ticks.length.x = unit(2, "mm"))
ggplotly(gg_Grants_CharSize_1617_prop,
tooltip = "text") %>%
layout(title = list(text = "Percentage of Grants by Country Use and Charity Size",
standoff = 10,
xref = "canvas",
x = 0.1),
font = list(family = FSSIfont,
size = 12),
margin = list(t = 75,
b = 50),
legend = list(title = list(text = "Grant use",
font = list(size = 14)),
itemclick = "toggleothers",
itemdoubleclick = "toggle"))
# Removing Invalid ABNs
## Reference Keybreaker file
ABN_Keybreaker <- read_excel("VCOSS Data/ABN Keybreaker.xlsx")
kable(ABN_Keybreaker,
"ABN Format Guide") %>%
kable_styling(bootstrap_options = c("striped", "hover"),
full_width = FALSE)
kable(ABN_Keybreaker,
"ABN Format Guide") %>%
kable_styling(bootstrap_options = c("striped", "hover"),
full_width = FALSE)
kable(ABN_Keybreaker,
caption = "ABN Format Guide") %>%
kable_styling(bootstrap_options = c("striped", "hover"),
full_width = FALSE)
kable(ABN_Keybreaker,
caption = "ABN Format Guide") %>%
kable_styling(bootstrap_options = c("striped", "hover"),
full_width = FALSE,
position = "left")
ggplotly(gg_Volunteers_MainAct_1617,
tooltip = "text") %>%
layout(title = list(text = "Number of Volunteers by Main Activity, 2016 to 2017",
standoff = 10,
xref = "canvas",
x = 0.1),
font = list(family = FSSIfont,
size = 12),
legend = list(title = list(text = "Main Activity",
font = list(size = 14)),
font = list(size = 11),
itemclick = "toggleothers",
itemdoubleclick = "toggle"))

pl_SocServ_FundingSources_CharSize_1617 <- ggplotly(gg_SocServ_FundingSources_CharSize_1617,
tooltip = "text") %>%
layout(font = list(family = FSSIfont,
size = 12),
yaxis = list(title = list(text = "Charity Size",
standoff = 10)),
title = list(text = "Social Services Funding Sources for each Charity Size",
xref = "paper",
x = "0"),
margin = list(t = 55))
## 2016
FundingSources_16_long <- pivot_longer(select(VCOSS_ACNC_16,
main_activity = main_activity_2016,
charity_size,
government_grants = government_grants_2016,
donations_and_bequests = donations_and_bequests_2016,
all_other_revenue = all_other_revenue_2016),
cols = c(government_grants,
donations_and_bequests,
all_other_revenue),
names_to = "funding_source",
values_to = "funding_amount")
FundingSources_16_long <- filter(FundingSources_16_long,
!str_detect(main_activity, regex("social services",
ignore_case = T)))
Total_FundingSources_16 <- summarise(group_by(FundingSources_16_long,
charity_size, main_activity, funding_source),
funding_amount = sum(funding_amount))
Total_FundingSources_16$Year <- 2016
## 2017
FundingSources_17_long <- pivot_longer(select(VCOSS_ACNC_17,
main_activity,
charity_size,
government_grants = government_grants_2017,
donations_and_bequests = donations_and_bequests_2017,
all_other_revenue = all_other_revenue_2017),
cols = c(government_grants,
donations_and_bequests,
all_other_revenue),
names_to = "funding_source",
values_to = "funding_amount")
FundingSources_17_long <- filter(FundingSources_17_long,
!str_detect(main_activity, regex("social services",
ignore_case = T)))
Total_FundingSources_17 <- summarise(group_by(FundingSources_17_long,
charity_size, main_activity, funding_source),
funding_amount = sum(funding_amount))
Total_FundingSources_17$Year <- 2017
Total_FundingSources_1617 <- rbind(Total_FundingSources_16, Total_FundingSources_17)
Total_FundingSources_1617 <- group_by(Total_FundingSources_1617,
main_activity, charity_size, Year)
Total_FundingSources_1617 <- mutate(Total_FundingSources_1617,
"funding_proportion" = (funding_amount / sum(funding_amount,
na.rm = T)))
Total_FundingSources_1617_CharSize <- summarise(group_by(Total_FundingSources_1617,
charity_size, funding_source, Year),
funding_amount = sum(funding_amount, na.rm = T))
Total_FundingSources_1617_CharSize <- mutate(group_by(Total_FundingSources_1617_CharSize,
charity_size, Year),
funding_proportion = (funding_amount / sum(funding_amount,
na.rm = T)))
gg_FundingSources_CharSize_1617 <- ggplot(Total_FundingSources_1617_CharSize) +
geom_bar(aes(x = funding_proportion,
y = charity_size,
fill = str_clean_wrap(funding_source),
text = paste(sep = "\n",
str_clean_wrap(funding_source),
Year,
dollar(funding_amount),
percent(funding_proportion, 0.1))),
stat = "identity") +
scale_y_discrete("",
labels = function(x) str_clean_wrap(x)) +
scale_x_continuous("Funding Proportion",
labels = percent_format(1)) +
scale_fill_manual("Funding Source",
values = GreyGrad(3)) +
facet_wrap(~Year,
scales = "free_x") +
theme_minimal()
pl_FundingSources_CharSize_1617 <- ggplotly(gg_FundingSources_CharSize_1617,
tooltip = "text") %>%
layout(font = list(family = FSSIfont,
size = 12),
yaxis = list(title = list(text = "Charity Size",
standoff = 10)),
margin = list(t = 55))
subplot(pl_FundingSources_CharSize_1617,
pl_SocServ_FundingSources_CharSize_1617,
nrows = 2, shareX = T) %>%
layout(showlegend = F,
title = list(text = "Funding Sources for each Charity Size",
xref = "paper",
x = "0"),
yaxis = list(title = list(text = "Charity Size\nOther Sectors")),
yaxis2 = list(title = list(text = "Charity Size\nSocial Services")),
xaxis = list(title = "Funding Proportion"),
xaxis2 = list(title = "Funding Proportion"))
ggFundingSources <- ggplot(Revenue1617_long) +
geom_bar(aes(x = fct_rev(main_activity),
y = revenue_proportion,
group = revenue_source,
fill = revenue_source,
col = soc_serv_bool,
text = paste(sep = "\n",
str_clean_wrap(main_activity, 20),
str_clean_wrap(revenue_source, 20),
percent(revenue_proportion, 0.1),
dollar(revenue_amount))),
stat = "identity",
show.legend = T, size = 1) +
scale_x_discrete("",
labels = function(x) str_wrap(x, width = 25)) +
scale_y_continuous("Proportion of Funding",
labels = percent) +
facet_wrap(~Year) +
scale_fill_manual(values = GreyGrad(3),
labels = function(x) str_to_title(str_replace_all(str_remove_all(x,"prop"),
"_", " "))) +
scale_colour_manual("",
values = c(NA, FSSIGreenSingle)) +
coord_flip() +
theme_minimal() +
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
strip.background = element_rect(fill = FSSIUltraLight,
colour = NA))
ggplotly(ggFundingSources,
tooltip = "text") %>%
layout(showlegend = FALSE,
showlegend2 = FALSE,
title = list(text = "Total Funding Sources by Main Activity",
pad = list(b = 10)),
margin = list(t = 66),
font = list(family = FSSIfont,
size = 12),
yaxis = list(title = list(text = "Main Activity",
standoff = 25, size = 13)))
VCOSS_ACNC_16 <- na.omit(VCOSS_ACNC_16)
colnames(VCOSS_ACNC_17) <- c('abn','name','state','size','conducted_activity','main_activity','staff_part','staff_casual','staff_full','staff_volunteers','operates_vic',
'govern_grants','donation_bequests','other_revenue','total_revenue','other_income','total_gross_income','employee_expenses','interest_expenses','use_in_Aus','use_outside_Aus','other_expenses','total_expenses','net_surplus_deficit')
colnames(VCOSS_ACNC_16)<- c('abn','name','state','size','conducted_activity','main_activity','operates_vic','staff_full','staff_part','staff_casual','staff_volunteers',
'govern_grants','donation_bequests','other_revenue','total_revenue','other_income','total_gross_income','employee_expenses','interest_expenses','use_in_Aus','use_outside_Aus','other_expenses','total_expenses','net_surplus_deficit')
dat1 <- VCOSS_ACNC_17[,c('size','main_activity','staff_part','staff_casual','staff_full')]
# delete rows where the number of full time staff is not integer
dat1 <- dat1[-which(dat1[,'staff_full']%%1!=0),]
str(dat1)
dat1$staff_full <- as.numeric(dat1$staff_full)
dat1$staff_casual <- as.numeric(dat1$staff_casual)
dat1$staff_part <- as.numeric(dat1$staff_part)
sum(dat1[,3:5]) # total workers is 189896
dat1$size <- tolower(dat1$size)
staff2017 <- data.frame(
size=unlist(apply(as.matrix(dat1), 1, function(x) rep(x[1],sum(as.numeric(x[3:5]))))),
type=unlist(apply(as.matrix(dat1), 1, function(x) rep(x[2],sum(as.numeric(x[3:5]))))),
staff=unlist(apply(as.matrix(dat1), 1, function(x) c(rep('part-time',x[3]),rep('casual',x[4]),rep('full-time',x[5]))))
)
dat2 <- VCOSS_ACNC_16[,c('size','main_activity','staff_part','staff_casual','staff_full')]
unique(dat2$size)
dat2$staff_part <- as.numeric(dat2$staff_part)
print(sum(dat2[,3:5]))  # total workers 161023
staff2016 <- data.frame(
size=unlist(apply(as.matrix(dat2), 1, function(x) rep(x[1],sum(as.numeric(x[3:5]))))),
type=unlist(apply(as.matrix(dat2), 1, function(x) rep(x[2],sum(as.numeric(x[3:5]))))),
staff=unlist(apply(as.matrix(dat2), 1, function(x) c(rep('part-time',x[3]),rep('casual',x[4]),rep('full-time',x[5]))))
)
gg_staff17 <- ggplot(staff2017) +
geom_bar(aes(x = fct_rev(fct_infreq(staff)),
label = fct_rev(fct_infreq(staff)),
fill = staff,
text = paste(sep = "\n",
label,
paste("Count:", comma(..count..)),
paste('Percent:',round((..count..)/sum(..count..),3)*100, "%")),
show.legend = F)) +
scale_x_discrete("Staff type") +
scale_y_continuous("Number of Staffs") +
scale_fill_manual(values = GreyGrad(length(unique(staff2017$staff))),
guide = F) +
ggtitle("Number of Staffs by Type in 2017") +
theme_minimal() +
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank()) +
coord_flip()
##### 2016
gg_staff16 <- ggplot(staff2016) +
geom_bar(aes(x = fct_rev(fct_infreq(staff)),
label = fct_rev(fct_infreq(staff)),
fill = staff,
text = paste(sep = "\n",
label,
paste("Count:", comma(..count..)),
paste('Percent:',round((..count..)/sum(..count..),3)*100, "%")),
show.legend = F)) +
scale_x_discrete("Staff type") +
scale_y_continuous("Number of Staffs") +
scale_fill_manual(values = GreyGrad(length(unique(staff2016$staff))),
guide = F) +
ggtitle("Number of Staffs by Type in 2016") +
theme_minimal() +
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank()) +
coord_flip()
pl_staff17 <- ggplotly(gg_staff17,     tooltip = "text") %>%
layout(showlegend = F)
pl_staff16 <- ggplotly(gg_staff16,
tooltip = "text") %>%
layout(showlegend = F)
subplot(pl_staff16, pl_staff17,
nrows = 1, shareY = T)
dat1 <- pivot_longer(dat1,
cols = c(staff_part,
staff_casual,
staff_full),
names_to = "employment_type",
values_to = "employee_count")
dat1$Year <- 2017
dat2 <- pivot_longer(dat2,
cols = c(staff_part,
staff_casual,
staff_full),
names_to = "employment_type",
values_to = "employee_count")
dat2$Year <- 2016
dat_12 <- rbind(dat1, dat2)
totals_dat12 <- summarise(group_by(dat_12,
employment_type, Year),
employee_count = sum(employee_count, na.rm = TRUE))
totals_dat12 <- mutate(group_by(totals_dat12,
Year),
proportion = (employee_count / sum(employee_count, na.rm = TRUE)))
gg_staff_counts_1617 <- ggplot(totals_dat12) +
geom_bar(aes(x = employee_count,
y = factor(employment_type,
levels = c("staff_casual",
"staff_part",
"staff_full")),
fill = employment_type,
text = paste(sep = "\n",
employment_type,
comma(employee_count),
percent(proportion, 0.1))),
stat = "identity",
show.legend = FALSE) +
facet_rep_wrap(~ Year) +
scale_fill_manual(values = GreyGrad(3)) +
scale_y_discrete("Staff employment type") +
scale_x_continuous("Number of employees",
labels = comma) +
theme_minimal()
ggplotly(gg_staff_counts_1617,
tooltip = "text")
gg_staff_type17 <- ggplot(staff2017) +
geom_bar(aes(x = fct_rev(fct_infreq(type)),
label = fct_rev(fct_infreq(type)),
fill = staff,
text = paste(sep = "\n",
label,
fill,
paste("Count:", comma(..count..)),
paste('Percent:',round((..count..)/sum(..count..),3)*100, "%")),
show.legend = F)) +
scale_x_discrete(" ") +
scale_y_continuous("Number of Staffs") +
scale_fill_manual(values = GreyGrad(length(unique(staff2017$staff))),
guide = F) +
ggtitle("Number of Staffs by Charity type in 2017") +
theme_minimal() +
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank()) +
coord_flip()
gg_staff_type16 <- ggplot(staff2016) +
geom_bar(aes(x = fct_rev(fct_infreq(type)),
label = fct_rev(fct_infreq(type)),
fill = staff,
text = paste(sep = "\n",
label,
fill,
paste("Count:", comma(..count..)),
paste('Percent:',round((..count..)/sum(..count..),3)*100, "%")),
show.legend = F)) +
scale_x_discrete(" ") +
scale_y_continuous("Number of Staffs") +
scale_fill_manual(values = GreyGrad(length(unique(staff2016$staff))),
guide = F) +
ggtitle("Number of Staffs by Type and Charity type in 2016") +
theme_minimal() +
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank()) +
coord_flip()
ggplotly(gg_staff_type16,
tooltip = "text") %>%
layout(showlegend = T)
ggplotly(gg_staff_type17,
tooltip = "text") %>%
layout(showlegend = T)
gg_staff_size17 <- ggplot(staff2017) +
geom_bar(aes(x = fct_rev(fct_infreq(size)),
label = fct_rev(fct_infreq(size)),
fill = staff,
text = paste(sep = "\n",
label,
fill,
paste("Count:", comma(..count..)),
paste('Percent:',round((..count..)/sum(..count..),3)*100, "%")),
show.legend = F,stat ='identity')) +
scale_x_discrete(" ") +
scale_y_continuous("Number of Staffs") +
scale_fill_manual(values = GreyGrad(length(unique(staff2017$staff))),
guide = F) +
ggtitle("Number of Staffs by Type and Charity size in 2017") +
theme_minimal() +
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank()) +
coord_flip()
### 2016
gg_staff_size16 <- ggplot(staff2016) +
geom_bar(aes(x = fct_rev(fct_infreq(size)),
label = fct_rev(fct_infreq(size)),
fill = staff,
text = paste(sep = "\n",
label,
fill,
paste("Count:", comma(..count..)),
paste('Percent:',round((..count..)/sum(..count..),3)*100, "%")),
show.legend = F,stat ='identity')) +
scale_x_discrete(" ") +
scale_y_continuous("Number of Staffs") +
scale_fill_manual(values = GreyGrad(length(unique(staff2016$staff))),
guide = F) +
ggtitle("Number of Staffs by Type and Charity size in 2016") +
theme_minimal() +
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank()) +
coord_flip()
ggplotly(gg_staff_size16,
tooltip = "text") %>%
layout(showlegend = T)
ggplotly(gg_staff_size17,
tooltip = "text") %>%
layout(showlegend = T)
dat5 <- VCOSS_ACNC_16[,c('main_activity','staff_volunteers')]
sum(dat5$staff_volunteers)  # Numbers of Voluteer in 2016 was 408711
t4 <- data.frame(
volunteer=unlist(apply(as.matrix(dat5[,1:2]), 1, function(x) rep(x[1],as.numeric(x[2]))))
)
gg_vol16 <- ggplot(t4) +
geom_bar(aes(x = fct_rev(fct_infreq(volunteer)),
label = fct_rev(fct_infreq(volunteer)),
fill = volunteer,
text = paste(sep = "\n",
label,
paste("Count:", comma(..count..)),
paste('Percent:',round((..count..)/sum(..count..),3)*100, "%")),
show.legend = F)) +
scale_x_discrete("Charity type") +
scale_y_continuous("Number of Volunteers") +
scale_fill_manual(values = GreyGrad(length(unique(t4$volunteer))),
guide = F) +
ggtitle("Number of Volunteers by Charity Type in 2016") +
theme_minimal() +
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank()) +
coord_flip()
dat6 <- VCOSS_ACNC_17[,c('main_activity','staff_volunteers')]
str(dat6)
dat6$staff_volunteers <- as.numeric(dat6$staff_volunteers)
sum(dat6$staff_volunteers)  # Numbers of Voluteer in 2017 was 361145
t5 <- data.frame(
volunteer=unlist(apply(as.matrix(dat6[,1:2]), 1, function(x) rep(x[1],as.numeric(x[2]))))
)
gg_vol17 <- ggplot(t5) +
geom_bar(aes(x = fct_rev(fct_infreq(volunteer)),
label = fct_rev(fct_infreq(volunteer)),
fill = volunteer,
text = paste(sep = "\n",
label,
paste("Count:", comma(..count..)),
paste('Percent:',round((..count..)/sum(..count..),3)*100, "%")),
show.legend = F)) +
scale_x_discrete("Charity type") +
scale_y_continuous("Number of Volunteers") +
scale_fill_manual(values = GreyGrad(length(unique(t5$volunteer))),
guide = F) +
ggtitle("Number of Volunteers by Charity Type in 2017") +
theme_minimal() +
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank()) +
coord_flip()
pl_vol16 <- ggplotly(gg_vol16,
tooltip = "text") %>%
layout(showlegend = F)
pl_vol17 <- ggplotly(gg_vol17,
tooltip = "text") %>%
layout(showlegend = F)
subplot(pl_vol16, pl_vol17,
nrows = 1, shareY = T)
dat3 <- VCOSS_ACNC_16[,c('size','main_activity','govern_grants','donation_bequests','other_revenue','other_income','total_gross_income')]
# income source
t1 <- colSums(as.matrix(dat3[,3:6]))/sum(dat3[,3:6])
df1 <- data.frame(sources=names(t1),num=as.numeric(t1))
df1 <- df1[order(df1$num),]
label_value <- paste( round(df1$num/sum(df1$num) * 100, 1), '%', sep = '')
label_value
blank_theme <- theme_minimal()+
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank(),
plot.title=element_text(size=14, face="bold")
)
gg_income16 <- ggplot(data=df1, aes(x=1:4,fill= sources,y=num,
text = paste(sep = "\n",
sources,
paste('Percent:',round(num,3)*100, "%"))))+
geom_bar(stat="identity",width=0.5,position='stack',size=5)+
# coord_polar("y", start=0)+
scale_fill_manual(values=GreyGrad(4))+
geom_text(aes(label = label_value), size=3.2, position=position_stack(vjust = 0.5))+
labs(x = '', y = '', title = '') +
ggtitle("Percent of Income Sources in 2016")+
blank_theme+
theme(axis.text = element_blank()) + theme(axis.ticks = element_blank())
dat4 <- VCOSS_ACNC_17[,c('size','main_activity','govern_grants','donation_bequests','other_revenue','other_income','total_gross_income')]
t1_17 <- colSums(as.matrix(dat4[,3:6]))/sum(dat4[,3:6])
df1_17 <- data.frame(sources=names(t1_17),num=as.numeric(t1_17))
df1_17 <- df1_17[order(df1_17$num),]
label_value_17 <- paste( round(df1_17$num/sum(df1_17$num) * 100, 1), '%', sep = '')
label_value_17
## 17
gg_income17 <- ggplot(data=df1_17, aes(x=1:4,fill= sources,y=num,
text = paste(sep = "\n",
sources,
paste('Percent:',round(num,3)*100, "%"))))+
geom_bar(stat="identity",width=0.5,position='stack',size=5)+
# coord_polar("y", start=0)+
scale_fill_manual(values=GreyGrad(4))+
geom_text(aes(label = label_value_17), size=3.2, position=position_stack(vjust = 0.5))+
labs(x = '', y = '', title = '') +
blank_theme+
ggtitle("Percent of Income Sources in 2017")+
theme(axis.text = element_blank()) + theme(axis.ticks = element_blank())
ggplotly(gg_income16, tooltip = "text") %>%
layout(showlegend = T)
ggplotly(gg_income17, tooltip = "text") %>%
layout(showlegend = T)
# source income of different organazations
# 16
dat3$main_activity <- tolower(dat3$main_activity)
t2 <- aggregate(dat3[,3:7], by=list(dat3$main_activity), FUN=sum)
colnames(t2) <- c('main_activity','govern_grants','donation_bequests','other_revenue','other_income','total_gross_income')
df2<-reshape2::melt(
t2,
id.vars=c('main_activity','total_gross_income'),
variable.name = "sources",
value.name = "num"
)
df2 <- df2[order(df2$total_gross_income,decreasing = T),]
gg_income_type16 <- ggplot(data=df2)+geom_col(aes(x=main_activity, y=num,
label=fct_rev(fct_infreq(main_activity)),
fill=fct_rev(fct_infreq(sources)),
text = paste(sep = "\n",
main_activity,
sources,
paste('Number:',num)),
show.legend = F,stat ='identity'))+
scale_fill_manual(values = GreyGrad(length(unique(df2$sources))),
guide = F)+
ggtitle("Source of Income by Type in 2016") +
scale_x_discrete(" ") +
scale_y_continuous("Income") +
theme_minimal() +
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank()) +
coord_flip()
### 17
t2_17 <- aggregate(dat4[,3:6], by=list(dat4$main_activity), FUN=sum)
colnames(t2_17) <- c('main_activity','govern_grants','donation_bequests','other_revenue','other_income')
df2_17<-reshape2::melt(
t2_17,
id.vars=c('main_activity'),
variable.name = "sources",
value.name = "num"
)
gg_income_type17 <- ggplot(data=df2_17)+geom_col(aes(x=fct_rev(fct_infreq(main_activity)), y=num,
label=fct_rev(fct_infreq(main_activity)),
fill=fct_rev(fct_infreq(sources)),
text = paste(sep = "\n",
main_activity,
sources,
paste('Number:',num)),
show.legend = F,stat ='identity'))+
scale_fill_manual(values = GreyGrad(length(unique(df2_17$sources))),
guide = F)+
ggtitle("Source of Income by Type in 2017") +
scale_x_discrete(" ") +
scale_y_continuous("Income",
labels = dollar) +
theme_minimal() +
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank()) +coord_flip()
ggplotly(gg_income_type16, tooltip = "text") %>%
layout(showlegend = T)
ggplotly(gg_income_type17, tooltip = "text") %>%
layout(showlegend = T)
ggplotly(gg_income_type17, tooltip = "text") %>%
layout(showlegend = T)
?dplyr
